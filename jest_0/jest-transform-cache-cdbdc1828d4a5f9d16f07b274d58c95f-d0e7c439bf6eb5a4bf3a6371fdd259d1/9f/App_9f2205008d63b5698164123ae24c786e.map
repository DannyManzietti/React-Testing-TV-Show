{"version":3,"sources":["App.js"],"names":["App","show","setShow","seasons","setSeasons","selectedSeason","setSelectedSeason","episodes","then","res","data","_embedded","handleSelect","e","value","image","original","name","summary","Object","keys"],"mappings":";;;;;;;;;;;AAAA;;AACA;;AACA;;AACA;;AACA;;AACA;;AAEA;;AACA;;;;AAEe,SAASA,GAAT,GAAe;AAC5B,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkB,qBAAS,IAAT,CAAxB;AACA,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwB,qBAAS,EAAT,CAA9B;AACA,QAAM,CAACC,cAAD,EAAiBC,iBAAjB,IAAsC,qBAAS,EAAT,CAA5C;AACA,QAAMC,QAAQ,GAAGJ,OAAO,CAACE,cAAD,CAAP,IAA2B,EAA5C;AAEA,wBAAU,MAAM;AAEd,gCAAYG,IAAZ,CAAiBC,GAAG,IAAI;AAClBP,MAAAA,OAAO,CAACO,GAAG,CAACC,IAAL,CAAP;AACAN,MAAAA,UAAU,CAAC,kCAAcK,GAAG,CAACC,IAAJ,CAASC,SAAT,CAAmBJ,QAAjC,CAAD,CAAV;AACD,KAHL;AAKD,GAPD,EAOG,EAPH;;AASA,QAAMK,YAAY,GAAGC,CAAC,IAAI;AACxBP,IAAAA,iBAAiB,CAACO,CAAC,CAACC,KAAH,CAAjB;AACD,GAFD;;AAIA,MAAI,CAACb,IAAL,EAAW;AACT,WAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BAAP;AACD;;AAED,SACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAK,IAAA,SAAS,EAAC,YAAf;AAA4B,IAAA,GAAG,EAAEA,IAAI,CAACc,KAAL,CAAWC,QAA5C;AAAsD,IAAA,GAAG,EAAEf,IAAI,CAACgB,IAAhE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKhB,IAAI,CAACgB,IAAV,CAFF,EAGG,8BAAMhB,IAAI,CAACiB,OAAX,CAHH,EAIE,6BAAC,sBAAD;AACE,IAAA,OAAO,EAAEC,MAAM,CAACC,IAAP,CAAYjB,OAAZ,CADX;AAEE,IAAA,QAAQ,EAAES,YAFZ;AAGE,IAAA,KAAK,EAAEP,cAAc,IAAI,iBAH3B;AAIE,IAAA,WAAW,EAAC,kBAJd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJF,EAUE,6BAAC,iBAAD;AAAU,IAAA,QAAQ,EAAEE,QAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAVF,CADF;AAcD","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport Dropdown from \"react-dropdown\";\nimport parse from \"html-react-parser\";\nimport {fetchShow} from './api/fetchShow'\nimport { formatSeasons } from \"./utils/formatSeasons\";\n\nimport Episodes from \"./components/Episodes\";\nimport \"./styles.css\";\n\nexport default function App() {\n  const [show, setShow] = useState(null);\n  const [seasons, setSeasons] = useState([]);\n  const [selectedSeason, setSelectedSeason] = useState(\"\");\n  const episodes = seasons[selectedSeason] || [];\n\n  useEffect(() => {\n\n    fetchShow().then(res => {\n          setShow(res.data);\n          setSeasons(formatSeasons(res.data._embedded.episodes));\n        });\n   \n  }, []);\n\n  const handleSelect = e => {\n    setSelectedSeason(e.value);\n  };\n\n  if (!show) {\n    return <h2>Fetching data...</h2>;\n  }\n\n  return (\n    <div className=\"App\">\n      <img className=\"poster-img\" src={show.image.original} alt={show.name} />\n      <h1>{show.name}</h1>\n      {parse(show.summary)}\n      <Dropdown\n        options={Object.keys(seasons)}\n        onChange={handleSelect}\n        value={selectedSeason || \"Select a season\"}\n        placeholder=\"Select an option\"\n      />\n      <Episodes episodes={episodes} />\n    </div>\n  );\n}\n"]}
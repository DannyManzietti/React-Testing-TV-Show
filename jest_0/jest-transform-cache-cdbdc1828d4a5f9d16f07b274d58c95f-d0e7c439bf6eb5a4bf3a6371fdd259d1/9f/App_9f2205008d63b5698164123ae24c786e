024ed9953e8d95434268890a5923464d
"use strict";

var _interopRequireWildcard = require("/home/thisguycodez/op/React-Testing-TV-Show/node_modules/@babel/runtime/helpers/interopRequireWildcard");

var _interopRequireDefault = require("/home/thisguycodez/op/React-Testing-TV-Show/node_modules/@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = App;

var _react = _interopRequireWildcard(require("react"));

var _axios = _interopRequireDefault(require("axios"));

var _reactDropdown = _interopRequireDefault(require("react-dropdown"));

var _htmlReactParser = _interopRequireDefault(require("html-react-parser"));

var _fetchShow = require("./api/fetchShow");

var _formatSeasons = require("./utils/formatSeasons");

var _Episodes = _interopRequireDefault(require("./components/Episodes"));

require("./styles.css");

var _jsxFileName = "/home/thisguycodez/op/React-Testing-TV-Show/src/App.js";

function App() {
  const [show, setShow] = (0, _react.useState)(null);
  const [seasons, setSeasons] = (0, _react.useState)([]);
  const [selectedSeason, setSelectedSeason] = (0, _react.useState)("");
  const episodes = seasons[selectedSeason] || [];
  (0, _react.useEffect)(() => {
    (0, _fetchShow.fetchShow)().then(res => {
      setShow(res.data);
      setSeasons((0, _formatSeasons.formatSeasons)(res.data._embedded.episodes));
    });
  }, []);

  const handleSelect = e => {
    setSelectedSeason(e.value);
  };

  if (!show) {
    return _react.default.createElement("h2", {
      __source: {
        fileName: _jsxFileName,
        lineNumber: 31
      },
      __self: this
    }, "Fetching data...");
  }

  return _react.default.createElement("div", {
    className: "App",
    __source: {
      fileName: _jsxFileName,
      lineNumber: 35
    },
    __self: this
  }, _react.default.createElement("img", {
    className: "poster-img",
    src: show.image.original,
    alt: show.name,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 36
    },
    __self: this
  }), _react.default.createElement("h1", {
    __source: {
      fileName: _jsxFileName,
      lineNumber: 37
    },
    __self: this
  }, show.name), (0, _htmlReactParser.default)(show.summary), _react.default.createElement(_reactDropdown.default, {
    options: Object.keys(seasons),
    onChange: handleSelect,
    value: selectedSeason || "Select a season",
    placeholder: "Select an option",
    __source: {
      fileName: _jsxFileName,
      lineNumber: 39
    },
    __self: this
  }), _react.default.createElement(_Episodes.default, {
    episodes: episodes,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 45
    },
    __self: this
  }));
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIkFwcC5qcyJdLCJuYW1lcyI6WyJBcHAiLCJzaG93Iiwic2V0U2hvdyIsInNlYXNvbnMiLCJzZXRTZWFzb25zIiwic2VsZWN0ZWRTZWFzb24iLCJzZXRTZWxlY3RlZFNlYXNvbiIsImVwaXNvZGVzIiwidGhlbiIsInJlcyIsImRhdGEiLCJfZW1iZWRkZWQiLCJoYW5kbGVTZWxlY3QiLCJlIiwidmFsdWUiLCJpbWFnZSIsIm9yaWdpbmFsIiwibmFtZSIsInN1bW1hcnkiLCJPYmplY3QiLCJrZXlzIl0sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7OztBQUFBOztBQUNBOztBQUNBOztBQUNBOztBQUNBOztBQUNBOztBQUVBOztBQUNBOzs7O0FBRWUsU0FBU0EsR0FBVCxHQUFlO0FBQzVCLFFBQU0sQ0FBQ0MsSUFBRCxFQUFPQyxPQUFQLElBQWtCLHFCQUFTLElBQVQsQ0FBeEI7QUFDQSxRQUFNLENBQUNDLE9BQUQsRUFBVUMsVUFBVixJQUF3QixxQkFBUyxFQUFULENBQTlCO0FBQ0EsUUFBTSxDQUFDQyxjQUFELEVBQWlCQyxpQkFBakIsSUFBc0MscUJBQVMsRUFBVCxDQUE1QztBQUNBLFFBQU1DLFFBQVEsR0FBR0osT0FBTyxDQUFDRSxjQUFELENBQVAsSUFBMkIsRUFBNUM7QUFFQSx3QkFBVSxNQUFNO0FBRWQsZ0NBQVlHLElBQVosQ0FBaUJDLEdBQUcsSUFBSTtBQUNsQlAsTUFBQUEsT0FBTyxDQUFDTyxHQUFHLENBQUNDLElBQUwsQ0FBUDtBQUNBTixNQUFBQSxVQUFVLENBQUMsa0NBQWNLLEdBQUcsQ0FBQ0MsSUFBSixDQUFTQyxTQUFULENBQW1CSixRQUFqQyxDQUFELENBQVY7QUFDRCxLQUhMO0FBS0QsR0FQRCxFQU9HLEVBUEg7O0FBU0EsUUFBTUssWUFBWSxHQUFHQyxDQUFDLElBQUk7QUFDeEJQLElBQUFBLGlCQUFpQixDQUFDTyxDQUFDLENBQUNDLEtBQUgsQ0FBakI7QUFDRCxHQUZEOztBQUlBLE1BQUksQ0FBQ2IsSUFBTCxFQUFXO0FBQ1QsV0FBTztBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQSwwQkFBUDtBQUNEOztBQUVELFNBQ0U7QUFBSyxJQUFBLFNBQVMsRUFBQyxLQUFmO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBLEtBQ0U7QUFBSyxJQUFBLFNBQVMsRUFBQyxZQUFmO0FBQTRCLElBQUEsR0FBRyxFQUFFQSxJQUFJLENBQUNjLEtBQUwsQ0FBV0MsUUFBNUM7QUFBc0QsSUFBQSxHQUFHLEVBQUVmLElBQUksQ0FBQ2dCLElBQWhFO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBLElBREYsRUFFRTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQSxLQUFLaEIsSUFBSSxDQUFDZ0IsSUFBVixDQUZGLEVBR0csOEJBQU1oQixJQUFJLENBQUNpQixPQUFYLENBSEgsRUFJRSw2QkFBQyxzQkFBRDtBQUNFLElBQUEsT0FBTyxFQUFFQyxNQUFNLENBQUNDLElBQVAsQ0FBWWpCLE9BQVosQ0FEWDtBQUVFLElBQUEsUUFBUSxFQUFFUyxZQUZaO0FBR0UsSUFBQSxLQUFLLEVBQUVQLGNBQWMsSUFBSSxpQkFIM0I7QUFJRSxJQUFBLFdBQVcsRUFBQyxrQkFKZDtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQSxJQUpGLEVBVUUsNkJBQUMsaUJBQUQ7QUFBVSxJQUFBLFFBQVEsRUFBRUUsUUFBcEI7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUEsSUFWRixDQURGO0FBY0QiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgUmVhY3QsIHsgdXNlU3RhdGUsIHVzZUVmZmVjdCB9IGZyb20gXCJyZWFjdFwiO1xuaW1wb3J0IGF4aW9zIGZyb20gXCJheGlvc1wiO1xuaW1wb3J0IERyb3Bkb3duIGZyb20gXCJyZWFjdC1kcm9wZG93blwiO1xuaW1wb3J0IHBhcnNlIGZyb20gXCJodG1sLXJlYWN0LXBhcnNlclwiO1xuaW1wb3J0IHtmZXRjaFNob3d9IGZyb20gJy4vYXBpL2ZldGNoU2hvdydcbmltcG9ydCB7IGZvcm1hdFNlYXNvbnMgfSBmcm9tIFwiLi91dGlscy9mb3JtYXRTZWFzb25zXCI7XG5cbmltcG9ydCBFcGlzb2RlcyBmcm9tIFwiLi9jb21wb25lbnRzL0VwaXNvZGVzXCI7XG5pbXBvcnQgXCIuL3N0eWxlcy5jc3NcIjtcblxuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gQXBwKCkge1xuICBjb25zdCBbc2hvdywgc2V0U2hvd10gPSB1c2VTdGF0ZShudWxsKTtcbiAgY29uc3QgW3NlYXNvbnMsIHNldFNlYXNvbnNdID0gdXNlU3RhdGUoW10pO1xuICBjb25zdCBbc2VsZWN0ZWRTZWFzb24sIHNldFNlbGVjdGVkU2Vhc29uXSA9IHVzZVN0YXRlKFwiXCIpO1xuICBjb25zdCBlcGlzb2RlcyA9IHNlYXNvbnNbc2VsZWN0ZWRTZWFzb25dIHx8IFtdO1xuXG4gIHVzZUVmZmVjdCgoKSA9PiB7XG5cbiAgICBmZXRjaFNob3coKS50aGVuKHJlcyA9PiB7XG4gICAgICAgICAgc2V0U2hvdyhyZXMuZGF0YSk7XG4gICAgICAgICAgc2V0U2Vhc29ucyhmb3JtYXRTZWFzb25zKHJlcy5kYXRhLl9lbWJlZGRlZC5lcGlzb2RlcykpO1xuICAgICAgICB9KTtcbiAgIFxuICB9LCBbXSk7XG5cbiAgY29uc3QgaGFuZGxlU2VsZWN0ID0gZSA9PiB7XG4gICAgc2V0U2VsZWN0ZWRTZWFzb24oZS52YWx1ZSk7XG4gIH07XG5cbiAgaWYgKCFzaG93KSB7XG4gICAgcmV0dXJuIDxoMj5GZXRjaGluZyBkYXRhLi4uPC9oMj47XG4gIH1cblxuICByZXR1cm4gKFxuICAgIDxkaXYgY2xhc3NOYW1lPVwiQXBwXCI+XG4gICAgICA8aW1nIGNsYXNzTmFtZT1cInBvc3Rlci1pbWdcIiBzcmM9e3Nob3cuaW1hZ2Uub3JpZ2luYWx9IGFsdD17c2hvdy5uYW1lfSAvPlxuICAgICAgPGgxPntzaG93Lm5hbWV9PC9oMT5cbiAgICAgIHtwYXJzZShzaG93LnN1bW1hcnkpfVxuICAgICAgPERyb3Bkb3duXG4gICAgICAgIG9wdGlvbnM9e09iamVjdC5rZXlzKHNlYXNvbnMpfVxuICAgICAgICBvbkNoYW5nZT17aGFuZGxlU2VsZWN0fVxuICAgICAgICB2YWx1ZT17c2VsZWN0ZWRTZWFzb24gfHwgXCJTZWxlY3QgYSBzZWFzb25cIn1cbiAgICAgICAgcGxhY2Vob2xkZXI9XCJTZWxlY3QgYW4gb3B0aW9uXCJcbiAgICAgIC8+XG4gICAgICA8RXBpc29kZXMgZXBpc29kZXM9e2VwaXNvZGVzfSAvPlxuICAgIDwvZGl2PlxuICApO1xufVxuIl19